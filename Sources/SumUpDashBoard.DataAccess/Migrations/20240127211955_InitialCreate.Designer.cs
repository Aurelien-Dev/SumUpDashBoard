// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SumUpDashBoard.DataAccess;

#nullable disable

namespace SumUpDashBoard.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240127211955_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SumUpDashBoard.BusinessModels.ComptabilityModels.SumUpTransactionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Devise")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeviseTransaction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("MontantFactureCredit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MontantFactureDebit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MontantTransactionCredit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MontantTransactionDebit")
                        .HasColumnType("numeric");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferencePaiement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Solde")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TauxChange")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TauxFrais")
                        .HasColumnType("numeric");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SumUpTransactions");
                });

            modelBuilder.Entity("SumUpDashBoard.BusinessModels.ComptabilityModels.TransactionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("SumUpTransactionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TrimesterId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SumUpTransactionId")
                        .IsUnique();

                    b.HasIndex("TrimesterId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SumUpDashBoard.BusinessModels.ComptabilityModels.UrsaffTrimesterModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AmountTaxe")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("boolean");

                    b.Property<decimal>("ReportableAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("Trimester")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UrsaffTrimesters");
                });

            modelBuilder.Entity("SumUpDashBoard.BusinessModels.ComptabilityModels.TransactionModel", b =>
                {
                    b.HasOne("SumUpDashBoard.BusinessModels.ComptabilityModels.SumUpTransactionModel", "SumUpTransaction")
                        .WithOne("Transaction")
                        .HasForeignKey("SumUpDashBoard.BusinessModels.ComptabilityModels.TransactionModel", "SumUpTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SumUpDashBoard.BusinessModels.ComptabilityModels.UrsaffTrimesterModel", "Trimester")
                        .WithMany("Transactions")
                        .HasForeignKey("TrimesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SumUpTransaction");

                    b.Navigation("Trimester");
                });

            modelBuilder.Entity("SumUpDashBoard.BusinessModels.ComptabilityModels.SumUpTransactionModel", b =>
                {
                    b.Navigation("Transaction")
                        .IsRequired();
                });

            modelBuilder.Entity("SumUpDashBoard.BusinessModels.ComptabilityModels.UrsaffTrimesterModel", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
