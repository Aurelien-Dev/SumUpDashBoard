@page "/Ursaff"
@using SumUpDashBoard.BusinessModels.ComptabilityModels
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]
@inject SumUpApiClient WeatherApi



<MudExpansionPanels>
    @foreach (var item in years)
    {
        <MudExpansionPanel Text="@($"Année : {item}")" MaxHeight="150">
            <MudGrid>
                @foreach (var item in ursaffSimulation.Where(s => s.Year == item).OrderByDescending(s => s.Trimester))
                {
                    <MudItem>
                        T:   @item.Trimester
                    </MudItem>
                }
            </MudGrid>
        </MudExpansionPanel>
    }
</MudExpansionPanels>


@code {
    private DateTime StartingActivity = new DateTime(2020, 1, 1);

    private int[] years = new int[] { 2020, 2021, 2022, 2023, 2024 };

    private List<UrsaffViewModel> ursaffSimulation = new List<UrsaffViewModel>();


    protected override async Task OnInitializedAsync()
    {
        for (int i = 0; i < 4; i++)
        {
            var year = StartingActivity.Year + i;
            ursaffSimulation.AddRange(new List<UrsaffViewModel>()
            {
                new UrsaffViewModel() { Year = year, Trimester = Trimester.First },
                new UrsaffViewModel() { Year = year, Trimester = Trimester.Second },
                new UrsaffViewModel() { Year = year, Trimester = Trimester.Third },
                new UrsaffViewModel() { Year = year, Trimester = Trimester.Fourth }
            });
        }

        var dd = ursaffSimulation.GroupBy(s => s.Year).Select(s => new { Year = s.Key, Ursaff = s.ToList() }).ToList();

        List<UrsaffTrimesterModel> UrsaffTrimesters = await WeatherApi.GetTrimesterAsync();
    }

    private void Toggle(UrsaffViewModel p)
    {
        p.Expended = !p.Expended;
        StateHasChanged();
    }

    public class UrsaffViewModel : UrsaffTrimesterModel
    {

        public bool Expended { get; set; } = false;
    }
}